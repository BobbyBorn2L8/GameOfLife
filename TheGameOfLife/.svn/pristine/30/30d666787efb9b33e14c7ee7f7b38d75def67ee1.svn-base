package gameOfLife;

import java.io.File;
import java.io.IOException;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;


public class GameSound {
	
	private String audioFilePath;
	private Clip audioClip;
	
	public GameSound(String audioFilePath) // This constructor simply sets the audioFilePath ready to be used upon playing the sound
	{
		this.audioFilePath = audioFilePath;
		
		File audioFile = new File(getClass().getResource(audioFilePath).getFile());
		
        try 
        {
        	AudioInputStream audioStream = AudioSystem.getAudioInputStream(audioFile);
        	 
            AudioFormat format = audioStream.getFormat();
  
            DataLine.Info info = new DataLine.Info(Clip.class, format);
        
            Clip audioClip = (Clip) AudioSystem.getLine(info);
  
            this.audioClip = audioClip;
        	
        	audioClip.open(audioStream);
        	
        	// audioClip.start();
          
		} 
        catch (LineUnavailableException | IOException | UnsupportedAudioFileException e) 
        {
			e.printStackTrace();
		}
 
	}
	
	public void playOrResumeSound()
	{
		audioClip.start();
	}
	
	public void pauseSound() // This method pauses the Clip at the current point
	{
		audioClip.stop();
	}
	
	public void resumeSound() // This method plays the Clip at the current point
	{
		audioClip.start();
	}
	
	public void closeSound() // This method closes the sound
	{
		audioClip.close();
	}
	
	public void loopSound() // This method is only used for the game soundtrack and causes it to loop until stopped.
	{
		audioClip.loop(Clip.LOOP_CONTINUOUSLY);;
	}

}
